version: '3'
services:

  proxy:
    image: 'registry.access.redhat.com/ubi8/nginx-120'
    command:
      - nginx
      - -g
      - daemon off;
    restart: always
    depends_on:
      context-broker:
        condition: service_healthy
      grafana:
        condition: service_healthy
      iot-device-mgmt-web:
        condition: service_healthy
    volumes:
      - ./configs/proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/proxy/openssl/server.crt:/etc/ssl/server.crt
      - ./configs/proxy/openssl/server.key:/etc/ssl/server.key
      - ./configs/keycloak/openssl/server.pem:/etc/ssl/kc-server.crt
      - ./configs/proxy/openssl/server.key:/etc/ssl/kc-server.key
    ports:
      - '8443:443'
      - '8444:444'


  iot-device-mgmt-web:
    image: 'ghcr.io/diwise/iot-device-mgmt-web:prod-b6ea144499af19d3ad0e47ae465a4de1aabba391'
    restart: always
    depends_on:
      iot-device-mgmt:
        condition: service_healthy
    volumes:
      - ./configs/diwise/devmgmtweb-kc.json:/opt/app-root/src/device-management/config/keycloak.json
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 3s
      timeout: 2s
      retries: 10


  iot-agent:
    image: 'ghcr.io/diwise/iot-agent:prod-d899fd71567da71138137b02e27861b4e087d23a'
    restart: always
    depends_on:
      iot-device-mgmt:
        condition: service_healthy
    environment:
      MQTT_DISABLED: 'true'
      RABBITMQ_HOST: 'rabbitmq'
      DEV_MGMT_URL: 'http://iot-device-mgmt:8080'
      MSG_FWD_ENDPOINT: 'http://iot-agent:8080/api/v0/messages'
      OAUTH2_TOKEN_URL: 'http://keycloak:8080/realms/diwise-local/protocol/openid-connect/token'
      OAUTH2_CLIENT_ID: 'diwise-devmgmt-api'
      OAUTH2_CLIENT_SECRET: '615241704865544572616B61474E494B65504861574E7449744943655269654E'
      APPSERVER_FACADE: 'chirpstack'
    ports:
      - '8080'


  iot-core:
    image: 'ghcr.io/diwise/iot-core:prod-396e0bff3297db1cd4a91d191f02484d0918038c'
    restart: always
    depends_on:
      iot-device-mgmt:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
      DEV_MGMT_URL: 'http://iot-device-mgmt:8080'
      OAUTH2_TOKEN_URL: 'http://keycloak:8080/realms/diwise-local/protocol/openid-connect/token'
      OAUTH2_CLIENT_ID: 'diwise-devmgmt-api'
      OAUTH2_CLIENT_SECRET: '615241704865544572616B61474E494B65504861574E7449744943655269654E'
    ports:
      - '8080'


  iot-device-mgmt:
    image: 'ghcr.io/diwise/iot-device-mgmt:prod-2ae2497f14fa0f69b177aeee17e7d2832ee67bd6'
    restart: always
    depends_on:
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
    volumes:
      - ./configs/diwise/data:/opt/diwise/config/data
      - ./configs/diwise/devmgmt-auth.rego:/opt/diwise/config/authz.rego
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s


  iot-transform-fiware:
    image: 'ghcr.io/diwise/iot-transform-fiware:prod-8e97928930b5bc8ed15fd81d1a3700639a35f9c8'
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      context-broker:
        condition: service_healthy
    environment:
      NGSI_CB_URL: 'http://context-broker:8080'
      RABBITMQ_HOST: 'rabbitmq'


  rabbitmq:
    image: 'bitnami/rabbitmq:3.8'
    #image: 'arm64v8/rabbitmq:3.8'
    environment:
      RABBITMQ_DEFAULT_USER: 'user'
      RABBITMQ_DEFAULT_PASS: 'bitnami'
    ports:
      - '4369'
      - '5672'
      - '25672'
      - '15672'
    volumes:
      - 'rabbitmq_data:/bitnami'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 2s
      retries: 60
      start_period: 20s


  context-broker:
    image: 'ghcr.io/diwise/context-broker:prod-f9eff5f08ece6708a967eb0438c7f6ea3598aaaf'
    restart: always
    environment:
      CONTEXT_BROKER_CLIENT_DEBUG: 'true'
    depends_on:
      keycloak:
        condition: service_healthy
      orion-ld:
        condition: service_healthy
    volumes:
      - ./configs/diwise/context-broker.yaml:/opt/diwise/config/default.yaml
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 5s
      timeout: 2s
      retries: 12
      start_period: 10s

  orion-ld:
    image: 'quay.io/fiware/orion-ld@sha256:98f4c6e52e834c04910194fe00715064e4f6a78e4231a0813824b282376a338d'
    restart: always
    command: [ '-experimental', '-logLevel', 'DEBUG' ]
    environment:
      ORIONLD_MONGO_HOST: 'mongodb'
      ORIONLD_MONGO_USER: 'admin'
      ORIONLD_MONGO_PASSWORD: 'password'
      ORIONLD_LOG_FOR_HUMANS: 'TRUE'
      ORIONLD_TROE: 'FALSE'
      ORIONLD_DISABLE_FILE_LOG: 'TRUE'
    depends_on:
      mongodb:
        condition: service_started
    ports:
      - '1026'
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:1026/ngsi-ld/v1/types"
        ]
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 10s

  mongodb:
    image: mongo:5
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'password'
    ports:
      - '27017'
    command: --nojournal --quiet
    volumes:
      - mongo-db:/data

  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_AUTH_DATABASE: 'admin'
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'admin'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'password'
      ME_CONFIG_BASICAUTH_USERNAME: ''
    depends_on:
      orion-ld:
        condition: service_healthy
    ports:
      - '8183:8081'


  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    command:
      - 'start-dev'
      - '--hostname=iam.diwise.local'
      - '--hostname-port=8444'
      - '--proxy=edge'
      - '--health-enabled=true'
      - '-Dkeycloak.migration.action=import'
      - '-Dkeycloak.migration.provider=singleFile'
      - '-Dkeycloak.migration.strategy=OVERWRITE_EXISTING'
      - '-Dkeycloak.migration.file=/application-realm.json'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - '8080'
    volumes:
      - ./configs/keycloak/realm.json:/application-realm.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 5s
      timeout: 5s
      retries: 36
      start_period: 10s


  grafana:
    image: grafana/grafana:9.2.6
    command: [ '--config', '/usr/share/grafana/custom.ini' ]
    environment:
      GF_SERVER_DOMAIN: diwise.local
      GF_SERVER_ROOT_URL: https://diwise.local:8443/grafana/
      GF_SERVER_SERVER_FROM_SUBPATH: "true"
      GF_SECURITY_ADMIN_USER: diwise
      GF_SECURITY_ADMIN_PASSWORD: diwise
    volumes:
      - ./configs/grafana/custom.ini:/usr/share/grafana/custom.ini
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    ports:
      - '3000'
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health" ]
      interval: 2s
      timeout: 2s
      retries: 30
      start_period: 5s


volumes:
  rabbitmq_data:
    driver: local
  grafana-data:
  mongo-db: ~
