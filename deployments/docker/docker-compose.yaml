version: '3'
services:

  proxy:
    image: 'registry.access.redhat.com/ubi9/nginx-122'
    command:
      - nginx
      - -g
      - daemon off;
    restart: always
    depends_on:
      context-broker:
        condition: service_healthy
      grafana:
        condition: service_healthy
#      iot-device-mgmt-web:
#        condition: service_healthy
      iot-device-mgmt:
        condition: service_healthy
      iot-events:
        condition: service_healthy
      iot-things:
        condition: service_healthy
    volumes:
      - ./configs/proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/proxy/openssl/server.crt:/etc/ssl/server.crt
      - ./configs/proxy/openssl/server.key:/etc/ssl/server.key
      - ./configs/keycloak/openssl/server.pem:/etc/ssl/kc-server.crt
      - ./configs/proxy/openssl/server.key:/etc/ssl/kc-server.key
    ports:
      - '8443:443'
      - '8444:444'

  iot-agent:
    image: 'ghcr.io/diwise/iot-agent:prod-3eba04cc958643cfb3e04e1f90ab357f658076ff'
    restart: always
    depends_on:
      iot-device-mgmt:
        condition: service_healthy
      timescale:
        condition: service_healthy
    environment:
      MQTT_DISABLED: 'true'
      RABBITMQ_HOST: 'rabbitmq'
      DEV_MGMT_URL: 'http://iot-device-mgmt:8080'
      MSG_FWD_ENDPOINT: 'http://iot-agent:8080/api/v0/messages'
      OAUTH2_TOKEN_URL: 'http://keycloak:8080/realms/diwise-local/protocol/openid-connect/token'
      OAUTH2_CLIENT_ID: 'diwise-devmgmt-api'
      OAUTH2_CLIENT_SECRET: '615241704865544572616B61474E494B65504861574E7449744943655269654E'
      APPSERVER_FACADE: 'chirpstack'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'timescale'
      POSTGRES_PORT: '5432'
      POSTGRES_DBNAME: 'orion'
      POSTGRES_SSLMODE: 'disable'
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 5s
      retries: 60
      start_period: 10s
  
  iot-core:
    image: 'ghcr.io/diwise/iot-core:prod-323a53852bb523aaa6e542d24fc2127ba2320da7'
    restart: always
    depends_on:
      iot-device-mgmt:
        condition: service_healthy
      timescale:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
      DEV_MGMT_URL: 'http://iot-device-mgmt:8080'
      OAUTH2_TOKEN_URL: 'http://keycloak:8080/realms/diwise-local/protocol/openid-connect/token'
      OAUTH2_CLIENT_ID: 'diwise-devmgmt-api'
      OAUTH2_CLIENT_SECRET: '615241704865544572616B61474E494B65504861574E7449744943655269654E'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'timescale'
      POSTGRES_PORT: '5432'
      POSTGRES_DBNAME: 'orion'
      POSTGRES_SSLMODE: 'disable'
    volumes:
      - ./configs/diwise/functions.csv:/opt/diwise/config/functions.csv
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 5s
      retries: 60
      start_period: 10s

  iot-device-mgmt:
    image: 'ghcr.io/diwise/iot-device-mgmt:prod-d2506042a13f0219245f2f6d69aa00c8285c5fe9'
    restart: always
    depends_on:
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy      
      timescale:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'timescale'
      POSTGRES_PORT: '5432'
      POSTGRES_DBNAME: 'orion'
      POSTGRES_SSLMODE: 'disable'      
    volumes:
      - ./configs/diwise/data/devices.csv:/opt/diwise/config/devices.csv
      - ./configs/diwise/devmgmt-auth.rego:/opt/diwise/config/authz.rego
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 5s
      retries: 60
      start_period: 10s

#  iot-device-mgmt-web:
#    image: 'ghcr.io/diwise/iot-device-mgmt-web:prod-c097f0f24951380b7f2d4d26d3976b9e30a5bae9'
#    restart: always
#    depends_on:
#      iot-device-mgmt:
#        condition: service_healthy
#    volumes:
#      - ./configs/diwise/devmgmtweb-kc.json:/opt/app-root/src/device-management/config/keycloak.json
#    ports:
#      - '8080'
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
#      interval: 3s
#      timeout: 2s
#      retries: 10

  iot-transform-fiware:
    image: 'ghcr.io/diwise/iot-transform-fiware:prod-a4a54cd0ddf75b101646bc1aa2eacf352d11094c'
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      context-broker:
        condition: service_healthy
    environment:
      NGSI_CB_URL: 'http://context-broker:8080'
      RABBITMQ_HOST: 'rabbitmq'

  iot-events:
    image: 'ghcr.io/diwise/iot-events:prod-2a19579d433557e52c05bef79484025e3d1913e6'
    restart: always
    depends_on:
      keycloak:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      iot-device-mgmt:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
    volumes:
      - ./configs/diwise/devmgmt-auth.rego:/opt/diwise/config/authz.rego
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 5s
      retries: 60
      start_period: 10s

  iot-things:
    image: 'ghcr.io/diwise/iot-things:prod-b30b1cbc5581ba09b84bd8b94b27ce220e2d614d'
    restart: always
    depends_on:
      keycloak:
        condition:
          service_healthy
      timescale:
        condition:
          service_healthy
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'timescale'
      POSTGRES_PORT: '5432'
      POSTGRES_DBNAME: 'orion'
      POSTGRES_SSLMODE: 'disable'
    volumes:
      - ./configs/diwise/iot-things-auth.rego:/opt/diwise/config/authz.rego
      - ./configs/diwise/things.csv:/opt/diwise/config/things.csv
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 60
      start_period: 10s

  cip-functions:
    image: 'ghcr.io/diwise/cip-functions:prod-a032855f85048c715456a43d7579bffa7da35c02'
    restart: always
    depends_on:
      timescale:
        condition: service_healthy
      iot-core:
        condition: service_healthy          
      iot-things:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: 'rabbitmq'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST: 'timescale'
      POSTGRES_PORT: '5432'
      POSTGRES_DBNAME: 'orion'
      POSTGRES_SSLMODE: 'disable'
      OAUTH2_TOKEN_URL: 'http://keycloak:8080/realms/diwise-local/protocol/openid-connect/token'
      OAUTH2_CLIENT_ID: 'diwise-devmgmt-api'
      OAUTH2_CLIENT_SECRET: '615241704865544572616B61474E494B65504861574E7449744943655269654E'
      THINGS_URL: 'http://iot-things:8080'
    ports:
          - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 5s
      retries: 60
      start_period: 10s

  context-broker:
    image: 'ghcr.io/diwise/context-broker:prod-602165a8df814992bace851d26b27f838150f1a9'
    restart: always
    environment:
      CONTEXT_BROKER_CLIENT_DEBUG: 'true'
    depends_on:
      keycloak:
        condition: service_healthy
      orion-ld:
        condition: service_healthy
      mintaka:
        condition: service_healthy
    volumes:
      - ./configs/diwise/context-broker.yaml:/opt/diwise/config/default.yaml
      - ./configs/diwise/context-broker-auth.rego:/opt/diwise/config/authz.rego
    ports:
      - '8080'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 2s
      retries: 30
      start_period: 5s

  orion-ld:
    image: 'quay.io/fiware/orion-ld@sha256:d1c2b50ba47046c2dd0bcd786970469e21d6998b08ad09b56da8fb17cd267ef6'
    restart: always
    command: [ '-experimental', '-logLevel', 'DEBUG' ]
    environment:
      ORIONLD_MONGO_HOST: 'mongodb'
      ORIONLD_MONGO_USER: 'admin'
      ORIONLD_MONGO_PASSWORD: 'password'
      ORIONLD_TROE: 'TRUE'
      ORIONLD_TROE_USER: 'postgres'
      ORIONLD_TROE_PWD: 'password'
      ORIONLD_TROE_HOST: 'timescale'
      ORIONLD_LOG_FOR_HUMANS: 'TRUE'
      ORIONLD_DISABLE_FILE_LOG: 'TRUE'
    depends_on:
      mongodb:
        condition: service_healthy
      timescale:
        condition: service_healthy
    ports:
      - '1026'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:1026/ngsi-ld/v1/types" ]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s

  mintaka:
    image: fiware/mintaka:0.6.6
    restart: always
    depends_on:
      timescale:
        condition: service_healthy
    environment:
      DATASOURCES_DEFAULT_HOST: 'timescale'
      DATASOURCES_DEFAULT_USERNAME: 'postgres'
      DATASOURCES_DEFAULT_PASSWORD: 'password'
      DATASOURCES_DEFAULT_DATABASE: 'orion'
      BASEPATH: '/ngsi-ld/v1'
    volumes:
      - './configs/diwise/mintaka-logging.xml:/app/resources/logback.xml'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 2s
      timeout: 2s
      retries: 30
      start_period: 5s
    ports:
      - "8080"

  timescale:
    image: timescale/timescaledb-ha:pg14-latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    environment:
      POSTGRES_PASSWORD: 'password'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - "5432"

  mongodb:
    image: mongo:5
    healthcheck:
      test: ["CMD-SHELL", "mongo", "--port", "27017", "-u", "admin", "-p", "password", "--eval", "\"db.adminCommand('ping')\""]
      interval: 5s
      timeout: 1s
      retries: 12
      start_period: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'password'
    ports:
      - '27017'
    command: --nojournal --quiet
    volumes:
      - mongo-db:/data

  rabbitmq:
    image: 'bitnami/rabbitmq:3.11'
    environment:
      RABBITMQ_DEFAULT_USER: 'user'
      RABBITMQ_DEFAULT_PASS: 'bitnami'
    ports:
      - '4369'
      - '5672'
      - '25672'
      - '15672'
      - '15692'
    volumes:
      - 'rabbitmq_data:/bitnami'
      - './configs/rabbitmq/enabled_plugins:/opt/bitnami/rabbitmq/etc/rabbitmq/enabled_plugins'
      - './configs/rabbitmq/rabbitmq.conf:/opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 2s
      retries: 60
      start_period: 20s

  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    command:
      - 'start-dev'
      - '--hostname=iam.diwise.local'
      - '--hostname-port=8444'
      - '--proxy=edge'
      - '--health-enabled=true'
      - '-Dkeycloak.migration.action=import'
      - '-Dkeycloak.migration.provider=singleFile'
      - '-Dkeycloak.migration.strategy=OVERWRITE_EXISTING'
      - '-Dkeycloak.migration.file=/application-realm.json'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - '8080'
    volumes:
      - ./configs/keycloak/realm.json:/application-realm.json
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8080/health/ready"
        ]
      interval: 5s
      timeout: 5s
      retries: 36
      start_period: 10s

  grafana:
    image: grafana/grafana:10.1.6
    command: [ '--config', '/usr/share/grafana/custom.ini' ]
    environment:
      GF_SERVER_DOMAIN: diwise.local
      GF_SERVER_ROOT_URL: https://diwise.local:8443/grafana/
      GF_SERVER_SERVER_FROM_SUBPATH: "true"
      GF_SECURITY_ADMIN_USER: diwise
      GF_SECURITY_ADMIN_PASSWORD: diwise
    volumes:
      - ./configs/grafana/custom.ini:/usr/share/grafana/custom.ini
      - grafana-data:/var/lib/grafana
    ports:
      - '3000'
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--spider",
          "http://localhost:3000/api/health"
        ]
      interval: 2s
      timeout: 2s
      retries: 30
      start_period: 5s

volumes:
  rabbitmq_data:
    driver: local
  grafana-data:
  mongo-db: ~
