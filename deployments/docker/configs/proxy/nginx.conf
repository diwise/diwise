
worker_processes auto;
error_log /dev/stdout error;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    multi_accept        on;
    use                 epoll;
}

worker_rlimit_nofile 40000;

http {

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /opt/app-root/etc/nginx.d/*.conf;

    # this is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        proxy_busy_buffers_size   512k;
        proxy_buffers   4 512k;
        proxy_buffer_size   256k;

        listen       443 default_server ssl;
        listen       [::]:443 default_server ssl;
        server_name  diwise.local;
        root        /opt/app-root/src;
        access_log  /dev/stdout;
        resolver    127.0.0.11;

        ssl_certificate     /etc/ssl/server.crt;
        ssl_certificate_key /etc/ssl/server.key;

        # Load configuration files for the default server block.
        include /opt/app-root/etc/nginx.default.d/*.conf;

        location ~ ^/api/v0/messages(.*)$ {
            set $upstream http://iot-agent:8080;
            proxy_pass $upstream/api/v0/messages$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/devices(.*)$ {
            set $upstream http://iot-device-mgmt:8080;
            proxy_pass $upstream/api/v0/devices$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/admin(.*)$ {
            set $upstream http://iot-device-mgmt:8080;
            proxy_pass $upstream/api/v0/admin$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/events(.*)$ {
            set $upstream http://iot-events:8080;
            proxy_pass $upstream/api/v0/events$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/measurements(.*)$ {
            set $upstream http://iot-events:8080;
            proxy_pass $upstream/api/v0/measurements$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/things(.*)$ {
            set $upstream http://iot-things:8080;
            proxy_pass $upstream/api/v0/things$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/v0/alarms(.*)$ {
            set $upstream http://iot-device-mgmt:8080;
            proxy_pass $upstream/api/v0/alarms$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/api/functions(.*)$ {
            set $upstream http://iot-core:8080;
            proxy_pass $upstream/api/functions$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        # Proxy Grafana Live WebSocket connections.
        location ~ ^/grafana/api/live(.*)$ {
            set $upstream http://grafana:3000;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;

            proxy_pass $upstream/api/live$1$is_args$args;
        }

        location ~ ^/grafana/(.*)$ {
            set $upstream http://grafana:3000;

            proxy_pass $upstream/$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/ngsi-ld/(.*)$ {
            set $upstream http://context-broker:8080;

            proxy_pass $upstream/ngsi-ld/$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        location ~ ^/(.*)$ {
            set $upstream http://diwise-web:8080;

            add_header  Access-Control-Allow-Origin   "*";
            add_header  Access-Control-Allow-Headers  "hx-target, hx-current-url, hx-request";
            add_header  Access-Control-Allow-Methods 'GET, DELETE, POST, OPTIONS';

            if ($request_method = OPTIONS ) {
                return 200;
            }
            
            proxy_pass $upstream/$1$is_args$args;
            
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }
    }

    server {
        proxy_busy_buffers_size   512k;
        proxy_buffers   4 512k;
        proxy_buffer_size   256k;

        listen       444 default_server ssl;
        listen       [::]:444 default_server ssl;
        server_name  iam.diwise.local;
        root        /opt/app-root/src;
        access_log  /dev/stdout;
        resolver    127.0.0.11;

        ssl_certificate     /etc/ssl/server.crt;
        ssl_certificate_key /etc/ssl/server.key;

        # Load configuration files for the default server block.
        include /opt/app-root/etc/nginx.default.d/*.conf;

        location ~ ^/(.*)$ {
            set $upstream http://keycloak:8080;

            proxy_pass $upstream/$1$is_args$args;

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_hide_header Access-Control-Allow-Origin;
            add_header  Access-Control-Allow-Origin   "*";
            add_header  Access-Control-Allow-Headers  "hx-target, hx-current-url, hx-request";
         }
    }
}