apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-core
    app.kubernetes.io/part-of: iot-platform
  name: iot-core
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-events
    app.kubernetes.io/part-of: iot-platform
  name: iot-events
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-transform-fiware
    app.kubernetes.io/part-of: iot-platform
  name: iot-transform-fiware
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mintaka
    app.kubernetes.io/part-of: cip-platform
  name: mintaka
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/part-of: cip-platform
  name: timescale
  namespace: diwise
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: context-broker
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-agent
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-core
    app.kubernetes.io/part-of: iot-platform
  name: iot-core
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-core
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-device-mgmt
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-device-mgmt-web
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-events
    app.kubernetes.io/part-of: iot-platform
  name: iot-events
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-events
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mintaka
    app.kubernetes.io/part-of: cip-platform
  name: mintaka
  namespace: diwise
spec:
  ports:
  - name: default-port
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: mintaka
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongo-express
    app.kubernetes.io/part-of: cip-platform
  name: mongo-express
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    app.kubernetes.io/name: mongo-express
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
spec:
  ports:
  - name: default-port
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app.kubernetes.io/name: mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
spec:
  ports:
  - name: default-port
    port: 80
    protocol: TCP
    targetPort: 1026
  selector:
    app.kubernetes.io/name: orion-ld
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: timescale
    app.kubernetes.io/part-of: cip-platform
  name: timescale
  namespace: diwise
spec:
  ports:
  - name: timescaledb
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app.kubernetes.io/name: timescale
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: context-broker
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: context-broker
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/diwise/context-broker@sha256:fcb45f120e7251905f1414f76554ed9152fe488cbc51f00111ee3153b5678652
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: context-broker
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: context-broker-cfg
          readOnly: true
      serviceAccountName: context-broker
      volumes:
      - configMap:
          name: context-broker-config-cm
        name: context-broker-cfg
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-agent
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-agent
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              containerName: iot-agent
              resource: limits.memory
        - name: DEV_MGMT_URL
          value: http://iot-device-mgmt
        - name: MQTT_HOST
          valueFrom:
            secretKeyRef:
              key: mqtt-host
              name: authn-mqtt
        - name: MQTT_USER
          valueFrom:
            secretKeyRef:
              key: mqtt-user
              name: authn-mqtt
        - name: MQTT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mqtt-password
              name: authn-mqtt
        - name: MSG_FWD_ENDPOINT
          value: http://iot-agent/api/v0/messages
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-agent@sha256:52d7022b3679d154ea18f9d688254ab2ac5ff54822587a6d4e17be0a294ea6f2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-agent
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-core
    app.kubernetes.io/part-of: iot-platform
  name: iot-core
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-core
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-core
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              containerName: iot-core
              resource: limits.memory
        - name: DEV_MGMT_URL
          value: http://iot-device-mgmt
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-core@sha256:992db7f2f315b580ed3b03884d16e87e41f0e999fc5a6e0db891cf857c61217a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-core
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: conf-volume
      serviceAccountName: iot-core
      volumes:
      - configMap:
          name: core-cfg-cm
        name: conf-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-device-mgmt
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-device-mgmt
    spec:
      containers:
      - env:
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              containerName: iot-device-mgmt
              resource: limits.memory
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-device-mgmt@sha256:30f0bcbc308b24f3d26a96e60d4d40a1a3c25500d2cf5142d8146b916e445cf1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-device-mgmt
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: conf-volume
          readOnly: true
      serviceAccountName: iot-device-mgmt
      volumes:
      - configMap:
          name: dev-mgmt-cfg-cm
        name: conf-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-device-mgmt-web
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-device-mgmt-web
    spec:
      containers:
      - image: ghcr.io/diwise/iot-device-mgmt-web@sha256:5031e2c1781cf4b9d1d78a1bd0e08d538484960babe96008b7aba0f621a043ef
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-device-mgmt-web
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/app-root/src/device-management/config
          name: config-volume
      serviceAccountName: iot-device-mgmt-web
      volumes:
      - configMap:
          name: devmgmt-web-config
        name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-events
    app.kubernetes.io/part-of: iot-platform
  name: iot-events
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-events
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-events
    spec:
      containers:
      - env:
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              containerName: iot-events
              resource: limits.memory
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-events@sha256:4efbd686c912ab694636ff5233791036a607f54d9f3f4e94f9c5ede6ee556742
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-events
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: conf-volume
          readOnly: true
      serviceAccountName: iot-events
      volumes:
      - configMap:
          name: iot-events-cfg-cm
        name: conf-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-transform-fiware
    app.kubernetes.io/part-of: iot-platform
  name: iot-transform-fiware
  namespace: diwise
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-transform-fiware
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-transform-fiware
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NGSI_CB_URL
          value: http://context-broker
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-transform-fiware@sha256:03c3a59a691f93b42bbc9f35eea79f3aca7f983863f6d6e57f79e935ab9a9fbc
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-transform-fiware
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-transform-fiware
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mintaka
    app.kubernetes.io/part-of: cip-platform
  name: mintaka
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mintaka
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: mintaka
    spec:
      containers:
      - env:
        - name: BASEPATH
          value: /ngsi-ld/v1
        - name: DATASOURCES_DEFAULT_HOST
          value: timescale
        - name: DATASOURCES_DEFAULT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: authn-timescale
        - name: DATASOURCES_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: authn-timescale
        - name: DATASOURCES_DEFAULT_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: authn-timescale
        - name: LOGGERS_LEVELS_ROOT
          value: INFO
        image: fiware/mintaka:0.5.37
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: mintaka
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources: {}
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: mintaka
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongo-express
    app.kubernetes.io/part-of: cip-platform
  name: mongo-express
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo-express
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo-express
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ME_CONFIG_MONGODB_SERVER
          value: mongodb
        - name: ME_CONFIG_MONGODB_PORT
          value: "27017"
        - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
          value: "true"
        - name: ME_CONFIG_MONGODB_AUTH_DATABASE
          value: admin
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: authn-mongodb
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: authn-mongodb
        image: mongo-express
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: default-port
        name: mongo-express
        ports:
        - containerPort: 8081
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          httpGet:
            path: /
            port: default-port
      serviceAccountName: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: authn-mongodb
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: authn-mongodb
        image: mongo:5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: mongodb
        ports:
        - containerPort: 27017
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /data/db
          name: db-volume
      serviceAccountName: mongodb
      volumes:
      - emptyDir: {}
        name: db-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: orion-ld
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: orion-ld
    spec:
      containers:
      - command:
        - orionld
        - -fg
        - -multiservice
        - -ngsiv1Autocast
        - -experimental
        - -logLevel
        - DEBUG
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ORIONLD_MONGO_HOST
          value: mongodb
        - name: ORIONLD_MONGO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: authn-mongodb
        - name: ORIONLD_MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: authn-mongodb
        - name: ORIONLD_DISABLE_FILE_LOG
          value: "TRUE"
        image: quay.io/fiware/orion-ld@sha256:a65adbface4d5467add735d01c7204951e3c474ef8fc901fbd3a2af285beafea
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ngsi-ld/v1/types
            port: default-port
          timeoutSeconds: 5
        name: orion-ld
        ports:
        - containerPort: 1026
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          failureThreshold: 6
          httpGet:
            path: /ngsi-ld/v1/types
            port: default-port
          periodSeconds: 10
          timeoutSeconds: 5
      serviceAccountName: orion-ld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: timescale
    app.kubernetes.io/part-of: cip-platform
  name: timescale
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: timescale
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: timescale
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: superuser
              name: authn-timescale
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: superpass
              name: authn-timescale
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        image: timescale/timescaledb:latest-pg14-bitnami
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - pg_isready -U "$POSTGRESQL_USER"
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: timescale
        ports:
        - containerPort: 5432
          name: timescaledb
          protocol: TCP
        resources: {}
      serviceAccountName: timescale
status: {}
