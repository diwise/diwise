apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-core
    app.kubernetes.io/part-of: iot-platform
  name: iot-core
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: iot-transform-fiware
    app.kubernetes.io/part-of: iot-platform
  name: iot-transform-fiware
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: context-broker
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-agent
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-device-mgmt
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: iot-device-mgmt-web
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongo-express
    app.kubernetes.io/part-of: cip-platform
  name: mongo-express
  namespace: diwise
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    app.kubernetes.io/name: mongo-express
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
spec:
  ports:
  - name: default-port
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app.kubernetes.io/name: mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
spec:
  ports:
  - name: default-port
    port: 80
    protocol: TCP
    targetPort: 1026
  selector:
    app.kubernetes.io/name: orion-ld
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: context-broker
    app.kubernetes.io/part-of: cip-platform
  name: context-broker
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: context-broker
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: context-broker
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/diwise/context-broker@sha256:836e0b4dbe4b330138cd7a75ebb4441f244f1e01d5501ed53ea0b162f949b7ba
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: context-broker
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: context-broker-cfg
          readOnly: true
      serviceAccountName: context-broker
      volumes:
      - configMap:
          name: context-broker-config-cm
        name: context-broker-cfg
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-agent
    app.kubernetes.io/part-of: iot-platform
  name: iot-agent
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-agent
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-agent
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEV_MGMT_URL
          value: http://iot-device-mgmt
        - name: MQTT_HOST
          valueFrom:
            secretKeyRef:
              key: mqtt-host
              name: authn-mqtt
        - name: MQTT_TOPIC_0
          valueFrom:
            secretKeyRef:
              key: mqtt-topic
              name: authn-mqtt
        - name: MQTT_USER
          valueFrom:
            secretKeyRef:
              key: mqtt-user
              name: authn-mqtt
        - name: MQTT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mqtt-password
              name: authn-mqtt
        - name: MSG_FWD_ENDPOINT
          value: http://iot-agent/api/v0/messages
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-agent@sha256:73341768bf217cbd1ff227d200badc69f638e38914029561f324ddda868c165e
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-agent
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-core
    app.kubernetes.io/part-of: iot-platform
  name: iot-core
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-core
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-core
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEV_MGMT_URL
          value: http://iot-device-mgmt
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-core@sha256:b56583ef90f0b1a7b06bfcdbd3c778ee6a8932049990a4ec43e3dd726901c6f2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-core
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-core
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt
  namespace: diwise
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-device-mgmt
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-device-mgmt
    spec:
      containers:
      - env:
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-device-mgmt@sha256:b80a2b02b444a13d27b0f2904b2af735c71b6b60fa0a86e41261c48480c3f286
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-device-mgmt
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /opt/diwise/config
          name: conf-volume-devices-cfg
          readOnly: true
      serviceAccountName: iot-device-mgmt
      volumes:
      - configMap:
          name: known-devices-cm
        name: conf-volume-devices-cfg
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-device-mgmt-web
    app.kubernetes.io/part-of: iot-platform
  name: iot-device-mgmt-web
  namespace: diwise
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-device-mgmt-web
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-device-mgmt-web
    spec:
      containers:
      - env:
        - name: DEVICE_MGMT_URL
          value: http://iot-device-mgmt
        image: ghcr.io/diwise/iot-device-mgmt-web@sha256:07401e63670e86edc9f84aa24aea9c5a38737aa5641d1bc17afc285123d37b65
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-device-mgmt-web
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-device-mgmt-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: iot-transform-fiware
    app.kubernetes.io/part-of: iot-platform
  name: iot-transform-fiware
  namespace: diwise
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: iot-transform-fiware
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iot-transform-fiware
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NGSI_CB_URL
          value: http://context-broker
        - name: RABBITMQ_HOST
          value: rabbitmq
        image: ghcr.io/diwise/iot-transform-fiware@sha256:294fb401f0620b0741a8a0334922351f183c362462dcef80cffdd107cf1e712e
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: iot-transform-fiware
        ports:
        - containerPort: 8080
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 50m
            memory: 100Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
      serviceAccountName: iot-transform-fiware
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongo-express
    app.kubernetes.io/part-of: cip-platform
  name: mongo-express
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo-express
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo-express
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ME_CONFIG_MONGODB_SERVER
          value: mongodb
        - name: ME_CONFIG_MONGODB_PORT
          value: "27017"
        - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
          value: "true"
        - name: ME_CONFIG_MONGODB_AUTH_DATABASE
          value: admin
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          value: admin
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: password
        image: mongo-express
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: default-port
        name: mongo-express
        ports:
        - containerPort: 8081
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          httpGet:
            path: /
            port: default-port
      serviceAccountName: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: cip-platform
  name: mongodb
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
    spec:
      containers:
      - env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        image: mongo:5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: default-port
        name: mongodb
        ports:
        - containerPort: 27017
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          httpGet:
            path: /health
            port: default-port
        volumeMounts:
        - mountPath: /data/db
          name: db-volume
      serviceAccountName: mongodb
      volumes:
      - emptyDir: {}
        name: db-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: orion-ld
    app.kubernetes.io/name: orion-ld
    app.kubernetes.io/part-of: cip-platform
  name: orion-ld
  namespace: diwise
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: orion-ld
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: orion-ld
    spec:
      containers:
      - command:
        - orionld
        - -fg
        - -multiservice
        - -ngsiv1Autocast
        - -experimental
        - -logLevel
        - DEBUG
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ORIONLD_MONGO_HOST
          value: mongodb
        - name: ORIONLD_MONGO_USER
          value: admin
        - name: ORIONLD_MONGO_PASSWORD
          value: password
        - name: ORIONLD_TROE
          value: "FALSE"
        - name: ORIONLD_DISABLE_FILE_LOG
          value: "TRUE"
        image: quay.io/fiware/orion-ld@sha256:98f4c6e52e834c04910194fe00715064e4f6a78e4231a0813824b282376a338d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ngsi-ld/v1/types
            port: default-port
        name: orion-ld
        ports:
        - containerPort: 1026
          name: default-port
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 250Mi
        startupProbe:
          httpGet:
            path: /ngsi-ld/v1/types
            port: default-port
      serviceAccountName: orion-ld
